buildscript {
    ext.agp_version = '8.2.0'
    repositories {
        google()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = uri("https://maven.pkg.github.com/emakryo/rust-android-gradle")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath 'io.github.emakryo.rust-android-gradle:plugin:+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.github.emakryo.rust-android-gradle.rust-android'

android {
    namespace "com.nishtahir.androidrust"
    compileSdkVersion 27
    ndkVersion "23.1.7779620"

    defaultConfig {
        applicationId "com.nishtahir.androidrust"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

cargo {
    module = "../rust"
    targets = ["x86_64", "arm64"]
    libname = "rust"
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
}

afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.applicationVariants.all { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["merge${productFlavor}${buildType}JniLibFolders"].dependsOn(tasks["cargoBuild${buildType}"])
    }
}
